USE GSSWEB
GO
------Q1------
SELECT KEEPER_ID AS KeeperId ,USER_CNAME AS CName,
	   USER_ENAME AS EName,YEAR(LEND_DATE) AS BorrowYear
	   ,COUNT(KEEPER_ID) AS BorrowCnt
FROM BOOK_LEND_RECORD,MEMBER_M
WHERE KEEPER_ID = [user_id]
GROUP BY KEEPER_ID,USER_CNAME,USER_ENAME,YEAR(LEND_DATE)
ORDER BY KEEPER_ID,YEAR(LEND_DATE)
------Q1 END------
------Q2------
SELECT TOP(5)BLR.BOOK_ID AS BookId,BOOK_NAME AS BookName,
	   COUNT(BLR.BOOK_ID) AS QTY
FROM BOOK_LEND_RECORD AS BLR ,BOOK_DATA AS BD
WHERE BLR.BOOK_ID = BD.BOOK_ID
GROUP BY BLR.BOOK_ID,BOOK_NAME
ORDER BY QTY DESC
------Q2 END------
------Q3------
CREATE VIEW BOOKnum
AS 
SELECT  DISTINCT
	CASE 
		WHEN DATEPART(mm,LEND_DATE) BETWEEN 1 AND 3 THEN '2019/01~2019/03'
		WHEN DATEPART(mm,LEND_DATE) BETWEEN 4 AND 6 THEN '2019/04~2019/06'
		WHEN DATEPART(mm,LEND_DATE) BETWEEN 7 AND 9 THEN '2019/07~2019/09'
		WHEN DATEPART(mm,LEND_DATE) BETWEEN 10 AND 12 THEN '2019/10~2019/12'
	END AS [quarter]
	,COUNT(BLD.BOOK_ID) OVER(PARTITION BY DATEPART(mm,LEND_DATE))AS Num
FROM BOOK_LEND_RECORD AS BLD
WHERE YEAR(LEND_DATE) = 2019;
SELECT DISTINCT [quarter] AS [Quarter]  ,SUM(Num) AS Cnt
FROM BOOKnum
GROUP BY [quarter]
------Q3 END------
------Q4------
CREATE VIEW BOOKrank
AS
SELECT ROW_NUMBER() OVER(PARTITION  BY BOOK_CLASS_NAME ORDER BY COUNT(BLR.BOOK_ID) DESC) AS Seq,
	   BOOK_CLASS_NAME AS BookClass,BLR.BOOK_ID AS BookId, BOOK_NAME AS BookName,
	   COUNT(BLR.BOOK_ID) AS Cnt
FROM BOOK_LEND_RECORD AS BLR,BOOK_CLASS AS BC,BOOK_DATA AS BD
WHERE BLR.BOOK_ID = BD.BOOK_ID AND BD.BOOK_CLASS_ID = BC.BOOK_CLASS_ID
GROUP BY BOOK_CLASS_NAME,BLR.BOOK_ID,BOOK_NAME
--ORDER BY BookClass ASC, Cnt DESC , BookId ASC //因為VIEW不能有ORDER BY
SELECT *
FROM BOOKrank
WHERE Seq <= 3
ORDER BY BookClass ASC, Cnt DESC , BookId ASC
------Q4 END------
------Q5------
IF OBJECT_ID('YBook') IS NOT NULL
DROP VIEW YBook
GO
CREATE VIEW YBook
AS
SELECT BC.BOOK_CLASS_ID AS ClassId , BC.BOOK_CLASS_NAME AS ClassName 
		, YEAR(BLR.LEND_DATE) AS lendyear
		,count(BLR.IDENTITY_FILED) AS iden
FROM BOOK_CLASS  AS BC
	INNER JOIN (BOOK_DATA AS BD
	INNER JOIN BOOK_LEND_RECORD AS BLR ON BD.BOOK_ID = BLR.BOOK_ID) 
	ON BD.BOOK_CLASS_ID = BC.BOOK_CLASS_ID
GROUP BY BC.BOOK_CLASS_ID ,BC.BOOK_CLASS_NAME,BLR.LEND_DATE
--ORDER BY lendyear,ClassId
SELECT *
FROM YBook
--法二
SELECT ClassId,ClassName
		,SUM(CASE lendyear WHEN 2016 THEN iden ELSE 0 END) AS [CNT2016]
		,SUM(CASE lendyear WHEN 2017 THEN iden ELSE 0 END) AS [CNT2017]
		,SUM(CASE lendyear WHEN 2018 THEN iden ELSE 0 END) AS [CNT2018]
		,SUM(CASE lendyear WHEN 2019 THEN iden ELSE 0 END) AS [CNT2019]
FROM YBook
GROUP BY ClassId,ClassName
ORDER BY ClassId
-------失敗區------
CREATE VIEW YEARBook
AS
SELECT --DISTINCT
		BLR.IDENTITY_FILED AS iden,
		BC.BOOK_CLASS_ID AS ClassId, BOOK_CLASS_NAME AS ClassName
		,CASE YEAR(LEND_DATE) WHEN 2016 THEN  COUNT(BLR.BOOK_ID) END AS [CNT2016]
		,CASE YEAR(LEND_DATE) WHEN 2017 THEN  COUNT(BLR.BOOK_ID) END AS [CNT2017]
		,CASE YEAR(LEND_DATE) WHEN 2018 THEN  COUNT(BLR.BOOK_ID) END AS [CNT2018]
		,CASE YEAR(LEND_DATE) WHEN 2019 THEN  COUNT(BLR.BOOK_ID) END AS [CNT2019]
FROM BOOK_CLASS AS BC ,BOOK_LEND_RECORD AS BLR , BOOK_DATA AS BD
WHERE BLR.BOOK_ID = BD.BOOK_ID AND BD.BOOK_CLASS_ID = BC.BOOK_CLASS_ID 
GROUP BY BC.BOOK_CLASS_ID,BOOK_CLASS_NAME,LEND_DATE,BLR.IDENTITY_FILED
--ORDER BY ClassId;
SELECT *
FROM YEARBook
ORDER BY ClassId;
SELECT  DISTINCT ClassId,ClassName
		,CASE [CNT2016] WHEN 1 THEN COUNT(iden) OVER (PARTITION BY ClassId) ELSE 0 END AS [CNT2016]
		,CASE [CNT2017] WHEN 1 THEN COUNT(iden) OVER (PARTITION BY ClassId) ELSE 0 END AS [CNT2017]
		,CASE [CNT2018] WHEN 1 THEN COUNT(iden) OVER (PARTITION BY ClassId) ELSE 0 END AS [CNT2018]
		,CASE [CNT2019] WHEN 1 THEN COUNT(iden) OVER (PARTITION BY ClassId) ELSE 0 END AS [CNT2019]
FROM YEARBook ,BOOK_LEND_RECORD
WHERE YEAR(LEND_DATE)=2016
GROUP BY ClassId,ClassName,CNT2016,CNT2017,CNT2018,CNT2019,iden
ORDER BY ClassId
--法一(失敗)
SELECT ClassId,ClassName
		,CASE lendyear WHEN 2016 THEN COUNT(iden) END AS [CNT2016]
		,CASE lendyear WHEN 2017 THEN COUNT(iden) END AS [CNT2017]
		,CASE lendyear WHEN 2018 THEN COUNT(iden) END AS [CNT2018]
		,CASE lendyear WHEN 2019 THEN COUNT(iden) END AS [CNT2019]
FROM YBook
GROUP BY ClassId,ClassName,lendyear
ORDER BY ClassId
------Q5 END------

------Q6------
SELECT BOOK_CLASS_ID AS ClassId, BOOK_CLASS_NAME AS ClassName,
		[2016] AS [CNT2016],[2017] AS [CNT2017],[2018] AS [CNT2017] , [2019] AS [CNT2019]
FROM (
	SELECT BC.BOOK_CLASS_ID,BC.BOOK_CLASS_NAME ,YEAR(BLR.LEND_DATE) AS lendyear ,BLR.BOOK_ID
	FROM BOOK_CLASS AS BC,BOOK_LEND_RECORD AS BLR, BOOK_DATA AS BD
	WHERE BD.BOOK_CLASS_ID = BC.BOOK_CLASS_ID 
		   AND BLR.BOOK_ID = BD.BOOK_ID
	) AS D
PIVOT (COUNT(D.BOOK_ID)
	   FOR D.lendyear IN ([2016], [2017],[2018],[2019]) 
	  ) AS pvt
ORDER BY ClassId
------Q6 END------

------Q7------
SELECT DISTINCT BD.BOOK_ID AS 書本ID
		,CONVERT(VARCHAR,BD.BOOK_BOUGHT_DATE,111) AS 購書日期
		,CONVERT(VARCHAR,BLR.LEND_DATE,111) AS 借閱日期
		,CONCAT(BC.BOOK_CLASS_ID,'-',BC.BOOK_CLASS_NAME)AS 書籍類別
		,CONCAT(M.USER_ID,'-',M.USER_CNAME,'(',M.USER_ENAME,')') AS 借閱人
		,CONCAT(BD.BOOK_STATUS,'-','已借出' ) AS 狀態
		,PARSENAME(CONVERT(VARCHAR,CONVERT(MONEY,BOOK_AMOUNT),1),2) AS 購書金額
FROM BOOK_CLASS AS BC
	INNER JOIN BOOK_DATA AS BD ON BC.BOOK_CLASS_ID = BD.BOOK_CLASS_ID
	INNER JOIN BOOK_LEND_RECORD AS BLR ON BD.BOOK_ID = BLR.BOOK_ID
	INNER JOIN MEMBER_M AS M ON BLR.KEEPER_ID = M.USER_ID
WHERE M.USER_CNAME = '李四'
ORDER BY 書本ID DESC
------Q7 END------

------Q8------
--新增資料表
SELECT DISTINCT BD.BOOK_ID
		,BD.BOOK_BOUGHT_DATE
		,BLR.LEND_DATE
		,BC.BOOK_CLASS_ID
		,BC.BOOK_CLASS_NAME
		,BLR.KEEPER_ID
		,M.USER_ID
		,M.USER_CNAME
		,M.USER_ENAME
		,BD.BOOK_STATUS
		,BOOK_AMOUNT
INTO Q7Backup
FROM BOOK_CLASS AS BC
	FULL OUTER JOIN BOOK_DATA AS BD ON BC.BOOK_CLASS_ID = BD.BOOK_CLASS_ID
	FULL OUTER JOIN BOOK_LEND_RECORD AS BLR ON BD.BOOK_ID = BLR.BOOK_ID
	FULL OUTER JOIN MEMBER_M AS M ON BLR.KEEPER_ID = M.USER_ID
--查詢
SELECT  BOOK_ID AS 書本ID
		,CONVERT(VARCHAR,BOOK_BOUGHT_DATE,111) AS 購書日期
		,CONVERT(VARCHAR,LEND_DATE,111) AS 借閱日期
		,CONCAT(BOOK_CLASS_ID,'-',BOOK_CLASS_NAME)AS 書籍類別
		,CONCAT(KEEPER_ID,'-',USER_CNAME,'(',USER_ENAME,')') AS 借閱人
		,CONCAT(BOOK_STATUS,'-','已借出' ) AS 狀態
		,PARSENAME(CONVERT(VARCHAR,CONVERT(MONEY,BOOK_AMOUNT),1),2) AS 購書金額 
FROM Q7Backup
WHERE KEEPER_ID='0002'
ORDER BY 書本ID DESC
--看指定資料
SELECT *
FROM Q7Backup
WHERE BOOK_ID='2004'
ORDER BY BOOK_ID
/*插入
INSERT INTO Q7Backup (BOOK_ID,USER_ID,LEND_DATE)
VALUES(2004,0002,2019/01/02)
*/
/*刪除
DELETE FROM Q7Backup
WHERE BOOK_ID='2004' AND USER_ID='2'
*/
UPDATE Q7Backup
	SET KEEPER_ID='0002'
		,LEND_DATE = '2019/01/02'
		,USER_ID='0002'
		,USER_CNAME ='李四'
		,USER_ENAME = 'Bill'
WHERE BOOK_ID='2004'

UPDATE Q7Backup
	SET LEND_DATE = '2019/01/02'
WHERE KEEPER_ID='0002'
------Q8 END------

------Q9------
DELETE FROM Q7Backup
WHERE BOOK_ID = '2004'
------Q9 END------
